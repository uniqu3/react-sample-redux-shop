{"ast":null,"code":"var _jsxFileName = \"/home/uniqu3/Development/Learning/React/react-shop-sample/client/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'; //import './sign-in.styles.scss';\n\nimport { SignInContainer, SignInTitle, ButtonsContainer } from './sign-in.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    handleChange: handleChange,\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    value: password,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/uniqu3/Development/Learning/React/react-shop-sample/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","SignInContainer","SignInTitle","ButtonsContainer","googleSignInStart","emailSignInStart","FormInput","CustomButton","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SACIC,eADJ,EAEIC,WAFJ,EAGIC,gBAHJ,QAIO,kBAJP;AAMA,SACIC,iBADJ,EAEIC,gBAFJ,QAGO,+BAHP;AAKA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEH,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA6C;AACxD,QAAM,CAACK,eAAD,EAAkBC,cAAlB,IAAoCX,QAAQ,CAAC;AAC/CY,IAAAA,KAAK,EAAE,EADwC;AAE/CC,IAAAA,QAAQ,EAAE;AAFqC,GAAD,CAAlD;AAKA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEAV,IAAAA,gBAAgB,CAACM,KAAD,EAAQC,QAAR,CAAhB;AACH,GAJD;;AAMA,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC1B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AAEAT,IAAAA,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACS,IAAD,GAAQD;AAA9B,KAAD,CAAd;AACH,GAJD;;AAMA,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAII;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,YAAY,EAAEG,YAJlB;AAKI,IAAA,KAAK,EAAEL,KALX;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,KAAK,EAAEC,QAJX;AAKI,IAAA,YAAY,EAAEI,YALlB;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAEZ,iBAFb;AAGI,IAAA,cAAc,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAjBJ,CAJJ,CADJ;AAmCH,CAvDD;;AAyDA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,iBAAiB,EAAE,MAAMiB,QAAQ,CAACjB,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACM,KAAD,EAAQC,QAAR,KACdS,QAAQ,CAAChB,gBAAgB,CAAC;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAHwB,CAAL,CAAnC;;AAMA,eAAeZ,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\n//import './sign-in.styles.scss';\nimport {\n    SignInContainer,\n    SignInTitle,\n    ButtonsContainer,\n} from './sign-in.styles';\n\nimport {\n    googleSignInStart,\n    emailSignInStart,\n} from '../../redux/user/user.actions';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n    const [userCredentials, setCredentials] = useState({\n        email: '',\n        password: '',\n    });\n\n    const { email, password } = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        emailSignInStart(email, password);\n    };\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n\n        setCredentials({ ...userCredentials, [name]: value });\n    };\n\n    return (\n        <SignInContainer>\n            <SignInTitle>I already have an account</SignInTitle>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                    name=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    handleChange={handleChange}\n                    value={email}\n                    required\n                />\n                <FormInput\n                    name=\"password\"\n                    type=\"password\"\n                    label=\"Password\"\n                    value={password}\n                    handleChange={handleChange}\n                    required\n                />\n                <ButtonsContainer>\n                    <CustomButton type=\"submit\">Sign in</CustomButton>\n                    <CustomButton\n                        type=\"button\"\n                        onClick={googleSignInStart}\n                        isGoogleSignIn\n                    >\n                        Sign in with Google\n                    </CustomButton>\n                </ButtonsContainer>\n            </form>\n        </SignInContainer>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) =>\n        dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}